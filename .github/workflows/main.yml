name: Java EE Build and Deploy

on:
  push:
    branches:
      - main  # Adjust the branch name if needed

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: '8'  # Adjust the Java version if needed
        distribution: 'adopt'  # Specify the distribution, e.g., adopt, adopt-hotspot, adopt-openj9, etc.
        
    - name: Find Java source files
      run: find payroll_back-master/src/java -name "*.java" > sources.txt
      
    - name: Filter Java source files
      run: |
        # Add your filtering logic here if needed
        # For example, you can filter out certain files based on conditions
        # This command simply copies all source files to the filtered_sources.txt file
        cp sources.txt filtered_sources.txt
        
    - name: Install dependencies
      run: |
        mkdir lib
        # Download your dependencies
        curl -L -o lib/commons-io.jar https://repo1.maven.org/maven2/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar
        curl -L -o lib/commons-logging-1.1.1.jar https://repo1.maven.org/maven2/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar
        curl -L -o lib/gson-2.3.1.jar https://repo1.maven.org/maven2/com/google/code/gson/gson/2.3.1/gson-2.3.1.jar
        curl -L -o lib/json_simple-1.1.jar https://repo1.maven.org/maven2/com/googlecode/json-simple/json-simple/1.1/json-simple-1.1.jar
        curl -L -o lib/mysql-connector-java-8.0.15.jar https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.15/mysql-connector-java-8.0.15.jar
        curl -L -o lib/jasperreports.jar https://repo1.maven.org/maven2/net/sf/jasperreports/jasperreports/6.17.0/jasperreports-6.17.0.jar
        curl -L -o lib/jjwt.jar https://repo1.maven.org/maven2/io/jsonwebtoken/jjwt-jackson/0.11.2/jjwt-jackson-0.11.2.jar
        # Download servlet-api.jar
        curl -L -o lib/servlet-api.jar https://repo1.maven.org/maven2/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar
        
    - name: Create classes directory
      run: mkdir classes

    - name: Debugging
      run: ls -la
      working-directory: payroll_back-master/src/java

    - name: Compile Java source files
      run: javac -d classes -classpath "lib/*" @filtered_sources.txt
      working-directory: payroll_back-master/src/java

    - name: Create WAR file
      run: jar -cvf your-web-app.war -C web .
